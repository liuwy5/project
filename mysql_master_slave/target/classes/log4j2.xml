<?xml version="1.0" encoding="UTF-8"?>
<!-- 设置 log4j2 的自身 log 级别为 warn -->
<!-- 日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!-- Configuration 后面的 status, 这个用于设置 log4j2 自身内部的信息输出, 可以不设置, 当设置成 trace 时, 你会看到 log4j2 内部各种详细输出 -->
<!-- monitorInterval: Log4j 能够自动检测修改配置文件和重新配置本身, 设置间隔秒数 -->
<configuration status="WARN" monitorInterval="30">

    <Properties>
        <!-- 日志目录 -->
        <Property name="APP_LOG_ROOT">/Users/lw/data/visitor/log</Property>

        <!-- 日志格式:
        11:18:28.748 [main] ERROR com.smart.visitor.LogTest.logTest(LogTest.java:38) - java.lang.NullPointerException: exception test
        -->
        <Property name="LOG_PATTERN">%d{HH:mm:ss.SSS} [%t] %-5level %l{36} - %m%n</Property>
    </Properties>

    <appenders>
        <!-- 文件会打印出所有信息, 这个 log 每次运行程序会自动清空, 由 append 属性决定, 适合临时测试用 -->
        <!--<File name="log" fileName="${APP_LOG_ROOT}/test.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>-->

        <Console name="STDOUT" target="SYSTEM_OUT">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>

        <!-- 这个会打印出所有的 info 及以下级别的信息, 每次大小超过size, 则这 size 大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩, 作为存档-->
        <RollingFile name="RollingFileDebug" fileName="${APP_LOG_ROOT}/debug.log"
                     filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}.log">
            <!--<Filters>-->
                <!--&lt;!&ndash;控制台只输出level及以上级别的信息（onMatch）,其他的直接拒绝（onMismatch）&ndash;&gt;-->
                <!--<ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <!--<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--</Filters>-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->
            </Policies>
        </RollingFile>

        <!-- 日志类似流一样的进入 RollingFileInfo, 然后经过 ThresholdFilter 进行过滤.
             如果 ThresholdFilter 的顺序不一样的话, 输入的结果是不一样的.
             因为经过 ThresholdFilter 的时候, 如果有匹配项, 则直接打印日志了, 所以需要把高等级的日志级别放在前面
             并且, onMatch 属性设置为 DENY, 过滤掉高等级的日志; onMismatch 设置为 NEUTRAL, 把低等级的日志放行,
             到我们想要的级别后, onMache 设为 ACCEPT, 获取到日志, 并 onMismatch 设置为 DENY, 丢弃低等级日志, 并执行结束
        -->
        <RollingFile name="RollingFileInfo" fileName="${APP_LOG_ROOT}/info.log"
                     filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}.log">
            <Filters>
                <!--控制台只输出level及以上级别的信息（onMatch）,其他的直接拒绝（onMismatch）-->
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileWarn" fileName="${APP_LOG_ROOT}/warn.log"
                     filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}.log">
            <Filters>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->
            </Policies>
            <!-- DefaultRolloverStrategy 属性如不设置, 则默认为最多同一文件夹下7个文件, 这里设置了 20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${APP_LOG_ROOT}/error.log"
                     filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="ERROR"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->
            </Policies>
        </RollingFile>

        <!-- 特殊记录日志 -->
        <!--<RollingFile name="RollingFileInfoForLog1" fileName="${APP_LOG_ROOT}/log1-info.log"-->
        <!--filePattern="${APP_LOG_ROOT}/$${date:yyyy-MM}/log1-info-%d{yyyy-MM-dd}-%i.log">-->
        <!--<ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>-->
        <!--<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>-->
        <!--<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
        <!--<Policies>-->
        <!--<TimeBasedTriggeringPolicy/>-->
        <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->
        <!--</Policies>-->
        <!--</RollingFile>-->
    </appenders>

    <!-- 然后定义logger,只有定义了logger并引入的appender,appender才会生效 -->
    <loggers>
        <!-- 过滤掉一些无用的 debug 信息 -->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.hibernate" level="INFO"/>
        <logger name="springfox.documentation" level="INFO"/>
        <logger name="org.apache.ibatis" level="INFO"/>
        <logger name="org.mybatis" level="INFO"/>
        <logger name="com.baomidou.mybatisplus" level="INFO"/>
        <!--<Logger name="com.demo.log1" level="info" additivity="false">-->
        <!--<appender-ref ref="Console"/>-->
        <!--<appender-ref ref="RollingFileInfoForLog1"/>-->
        <!--</Logger>-->

        <root level="DEBUG">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileDebug"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>

    </loggers>
</configuration>